#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#

# Include schemas
include         /etc/openldap/schema/corba.schema
include         /etc/openldap/schema/core.schema
include         /etc/openldap/schema/cosine.schema
include         /etc/openldap/schema/duaconf.schema
include         /etc/openldap/schema/dyngroup.schema
include         /etc/openldap/schema/inetorgperson.schema
include         /etc/openldap/schema/java.schema
include         /etc/openldap/schema/misc.schema
include         /etc/openldap/schema/nis.schema
include         /etc/openldap/schema/openldap.schema
include         /etc/openldap/schema/ppolicy.schema
include         /etc/openldap/schema/collective.schema


# Allow LDAPv2 client connections.  This is NOT the default.
allow bind_v2

# Do not enable referrals until AFTER you have a working directory
# service AND an understanding of referrals.
#referral       ldap://root.openldap.org

pidfile         /var/run/openldap/slapd.pid
argsfile        /var/run/openldap/slapd.args

# Load dynamic backend modules
# - modulepath is architecture dependent value (32/64-bit system)
# - back_sql.la overlay requires openldap-server-sql package
# - dyngroup.la and dynlist.la cannot be used at the same time

modulepath  /usr/lib/openldap
modulepath  /usr/lib64/openldap
moduleload  back_ldap
moduleload  back_meta
moduleload  rwm

# moduleload accesslog.la
# moduleload auditlog.la
# moduleload back_sql.la
# moduleload chain.la
# moduleload collect.la
# moduleload constraint.la
# moduleload dds.la
# moduleload deref.la
# moduleload dyngroup.la
# moduleload dynlist.la
# moduleload memberof.la
# moduleload pbind.la
# moduleload pcache.la
# moduleload ppolicy.la
# moduleload refint.la
# moduleload retcode.la
# moduleload rwm.la
# moduleload seqmod.la
# moduleload smbk5pwd.la
# moduleload sssvlv.la
# moduleload syncprov.la
# moduleload translucent.la
# moduleload unique.la
# moduleload valsort.la

# The next three lines allow use of TLS for encrypting connections using a
# dummy test certificate which you can generate by running.
TLSCACertificateFile /root/openldap_proxy/data/certs/ldap.crt
TLSCertificateFile /root/openldap_proxy/data/certs/ldap.crt
TLSCertificateKeyFile /root/openldap_proxy/data/certs/ldap.key

# Log level
loglevel 256

#######################################################################
# database definitions
#######################################################################

#### Database definition #########################################

database meta
suffix "dc=local,dc=ssd,dc=ibm,dc=com"
rootdn "cn=admin,dc=local,dc=ssd,dc=ibm,dc=com"
rootpw "passw0rd"

#### LDAP_SERVER_ENTRY START ####
# uri           "ldap://192.168.56.121/dc=local,dc=ssd,dc=ibm,dc=com"
# readonly      yes
# lastmod       off
# suffixmassage "dc=local,dc=ssd,dc=ibm,dc=com" "dc=ubuntu1610,dc=local,dc=ssd,dc=ibm,dc=com"

# uri "ldap://192.168.56.124/dc=local,dc=ssd,dc=ibm,dc=com"
# readonly      yes
# lastmod       off
# suffixmassage "dc=local,dc=ssd,dc=ibm,dc=com" "dc=local,dc=ssd,dc=ibm,dc=com"
# rebind-as-user no
# idassert-bind bindmethod=simple
#    binddn="cn=admin,dc=local,dc=ssd,dc=ibm,dc=com"
#    credentials="passw0rd"
#    mode=none
#    flags=non-prescriptive
## If defined, selects what local identities are authorized to exploit the identity assertion feature
# idassert-authzFrom "dn.exact:cn=admin,dc=local,dc=ssd,dc=ibm,dc=com"

# uri           "ldap://9.23.210.79/dc=local,dc=ssd,dc=ibm,dc=com"
# lastmod       off
# suffixmassage "dc=local,dc=ssd,dc=ibm,dc=com" "ou=bluepages,o=ibm.com"
# map  attribute   lastName  sn

#### LDAP_SERVER_ENTRY END ####





### [2018-Feb-01][RF Ma] Using rwm overlay leads a problem where mapped attributes cannot be successfully 
###                      retrieved when they are specified as filters during an ldapsearch call. See 
###                      Defect 362727 and StackOverlfow question entry 48543470. So we decided to not use this overlay any more.

#### LDAP_ATTRIBUTE_OBJECTCLASS_MAPPING START ####
# overlay       rwm
# rwm-map       attribute   uid       uid
# rwm-map       attribute   lastName  sn
# rwm-map       objectClass group     posixGroup
# rwm-map       objectClass account   posixAccount

# overlay       rwm
# rwm-map       attribute   lastName  sAMAccountName

#### LDAP_ATTRIBUTE_OBJECTCLASS_MAPPING END ####

